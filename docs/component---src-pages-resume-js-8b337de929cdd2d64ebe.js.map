{"version":3,"sources":["webpack:///./src/utils/helpers.js","webpack:///./src/pages/resume.js"],"names":["getImageMap","images","regex","hasMultipleImages","limit","reduce","map","image","slug","node","relativePath","match","hasOwnProperty","length","push","childImageSharp","fluid","arr","data","history","allMarkdownRemark","edges","allFile","imageMap","Utils","title","href","target","download","style","fontSize","icon","className","key","id","frontmatter","fields","html","query"],"mappings":"oOAAe,GACbA,YAAa,SAACC,EAAQC,EAAOC,EAA2BC,GACtD,YADoE,IAAzCD,OAAoB,QAAqB,IAAdC,MAAQ,GACvDH,EAAOI,QAAO,SAACC,EAAKC,GACzB,IAAMC,EAAOD,EAAME,KAAKC,aAAaC,MAAMT,GAAO,GAClD,GAAIC,EACF,GAAIG,EAAIM,eAAeJ,GACjBF,EAAIE,GAAMK,QAAUT,GACtBE,EAAIE,GAAMM,KAAKP,EAAME,KAAKM,gBAAgBC,WACvC,CACL,IAAMC,EAAM,GACZA,EAAIH,KAAKP,EAAME,KAAKM,gBAAgBC,OACpCV,EAAIE,GAAQS,OAGdX,EAAIE,GAAQD,EAAME,KAAKM,gBAAgBC,MAEzC,OAAOV,IACN,O,kCCjBP,sHAOe,sBAAe,IAAZY,EAAW,EAAXA,KACVC,EAAUD,EAAKE,kBAAkBC,OAAS,GAC1CpB,EAASiB,EAAKI,QAAQD,OAAS,GAC/BE,EAAWC,IAAMxB,YAAYC,EAAQ,kBAC3C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKwB,MAAM,WACX,kBAAC,IAAD,CAAWA,MAAM,UAAjB,IAEE,uBAAGC,KAAK,8BAA8BC,OAAO,SAASC,UAAQ,GAC5D,kBAAC,IAAD,CACEC,MAAO,CAAEC,SAAU,QACnBC,KAAM,CAAC,MAAO,iBACdC,UAAU,iBAIhB,kBAAC,IAAD,CAAWA,UAAU,OAAOhB,OAAK,GAC/B,wBAAIgB,UAAU,OAAd,cACA,wBAAIA,UAAU,SACbb,EAAQb,KAAI,gBAAGG,EAAH,EAAGA,KAAH,OACX,yBAAKwB,IAAKxB,EAAKyB,IACb,kBAAC,IAAD,CACEC,YAAa1B,EAAK0B,YAClB5B,MAAOgB,EAASd,EAAK2B,OAAO5B,MAC5B6B,KAAM5B,EAAK4B,OAEb,wBAAIL,UAAU,aAGlB,wBAAIA,UAAU,aAAd,aACA,wBAAIA,UAAU,YAMf,IAAMM,EAAK","file":"component---src-pages-resume-js-8b337de929cdd2d64ebe.js","sourcesContent":["export default {\r\n  getImageMap: (images, regex, hasMultipleImages = false, limit = 3) => {\r\n    return images.reduce((map, image) => {\r\n      const slug = image.node.relativePath.match(regex)[0]\r\n      if (hasMultipleImages) {\r\n        if (map.hasOwnProperty(slug)) {\r\n          if (map[slug].length <= limit)\r\n            map[slug].push(image.node.childImageSharp.fluid)\r\n        } else {\r\n          const arr = []\r\n          arr.push(image.node.childImageSharp.fluid)\r\n          map[slug] = arr\r\n        }\r\n      } else {\r\n        map[slug] = image.node.childImageSharp.fluid\r\n      }\r\n      return map\r\n    }, {})\r\n  },\r\n}\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { PageLayout, PageTitle, WorkHistory } from \"../components\"\r\nimport { SEO, Utils } from \"../utils\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Container from \"react-bootstrap/Container\"\r\n\r\nexport default ({ data }) => {\r\n  const history = data.allMarkdownRemark.edges || []\r\n  const images = data.allFile.edges || []\r\n  const imageMap = Utils.getImageMap(images, /\\/[work].*\\/|$/)\r\n  return (\r\n    <PageLayout>\r\n      <SEO title=\"Resume\" />\r\n      <PageTitle title=\"Resume\">\r\n        &nbsp;\r\n        <a href=\"../../alex-krall-resume.pdf\" target=\"_blank\" download>\r\n          <FontAwesomeIcon\r\n            style={{ fontSize: \"2rem\" }}\r\n            icon={[\"fas\", \"file-download\"]}\r\n            className=\"icons file\"\r\n          />\r\n        </a>\r\n      </PageTitle>\r\n      <Container className=\"pt-3\" fluid>\r\n        <h2 className=\"m-4\">Experience</h2>\r\n        <hr className=\"w-75\" />\r\n        {history.map(({ node }) => (\r\n          <div key={node.id}>\r\n            <WorkHistory\r\n              frontmatter={node.frontmatter}\r\n              image={imageMap[node.fields.slug]}\r\n              html={node.html}\r\n            />\r\n            <hr className=\"w-75\" />\r\n          </div>\r\n        ))}\r\n        <h2 className=\"mb-4 mt-5\">Education</h2>\r\n        <hr className=\"w-75\" />\r\n      </Container>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/work/\" } }\r\n      sort: { fields: [frontmatter___endDate], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          html\r\n          frontmatter {\r\n            company\r\n            location\r\n            position\r\n            tags\r\n            startDate(formatString: \"MMM, YYYY\")\r\n            endDate(formatString: \"MMM, YYYY\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allFile(\r\n      filter: {\r\n        extension: { eq: \"png\" }\r\n        relativePath: { regex: \"/company/\" }\r\n        relativeDirectory: { regex: \"/content/work/\" }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          childImageSharp {\r\n            fluid(maxWidth: 400) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n          relativePath\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}